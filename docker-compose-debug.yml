version: '3.8'
services:
  db_dev:
    container_name: db-dev-container
    image: postgres:15
    environment:
      POSTGRES_DB: develop
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - '5433:5432'
    volumes:
      - D:/docker/krile-db:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 1s
      retries: 5
    networks:
          - krile_network
  pgadmin-dev:
    container_name: pgadmin-dev-container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_PASS}
    ports:
      - "5050:80"
    depends_on:
      - db_dev
    volumes:
      - D:/docker/krile-pgadmin:/var/lib/pgadmin
    env_file:
      - .env
    networks:
          - krile_network
  krile_develop:
    container_name: krile-develop-container
    restart: unless-stopped
    environment:
      DISCORD_TOKEN: ${SNOWCALOID_TOKEN}
      DB_NAME: develop
      DB_HOST: db_dev
      DB_PORT: 5432
    env_file:
      - .env
    ports:
      - 5678:5678
    build:
      context: .
      dockerfile: Dockerfile
    networks:
          - krile_network
    links:
      - db_dev
networks:
  krile_network:
    name: krile_network
    driver: bridge